day1: 
使用document.querySelector
使用classList.add 及 classList.remove 配合transition

document.querySelector(`audio[data-key=${e.keyCode}]`)
key.classList.add("playing");
this.classList.remove("playing");


day2:
使用.style 改變 style 屬性,
使用setInterval 定時執行function 

document.querySelector(".second-hand").style.transform = `rotate(${seconds_deg}deg)`;
setInterval(setDate, 1000);

day3:
初次使用CSS Variables

         :root {
            --spacing: 10px;
            --blur: 10px;
            --base: #ffc600;
        }
        
        img {
            padding: var(--spacing);
            background: var(--base);
            filter: blur( var(--blur));
        }

const suffix = this.dataset.sizing || '';
document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix);

day4:
使用Array function

const totalYears = inventors.reduce((total, inventor) => total + inventor.passed - inventor.year, 0);

const sum = data.reduce((obj, item) => {
    if (!obj[item]) {
        obj[item] = 0;
    }
    obj[item]++;
    return obj;
}, {});

google 發現第一種寫法會return 第一句,而第二種寫法需添加return
goolge 了javascript object 寫法及ES5 與ES6 的差別

day5: 
練習css flex 
flex: 1;
justify-content: center;
align-items: center;
display: flex;
flex-direction: column;

items.forEach(item => item.addEventListener('transitionend', toggleOpenActive));
有機會有數種transitionend 同時發生，導致toggle 失效

day6:
使用web api 
fetch(endpoint)
    .then(blob => blob.json())
    .then(data => cities.push(...data))
重溫array method
Regular Expression
function numWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    }

day7:
Array method 2
console.log(people.some(person => (2020 - person.year) >= 19));
console.log(people.every(person => (2020 - person.year) >= 19));
console.log(comments.find(comment => (comment.id === 823423)).text);
const index = comments.findIndex(comment => (comment.id === 823423));
comments.splice(index, 1)

day8:
html canvas

            ctx.beginPath();
            //start
            ctx.moveTo(lastX, lastY);
            //to
            ctx.lineTo(e.offsetX, e.offsetY);
            ctx.stroke();

offset x,y 是scr element 相應x,y

day9:
console 應用

console.assert(false, 'this is wrong');
只有condition = false 才會print 後面的string

計時
        console.time('fetching data');
        fetch('https://api.github.com/users/wesbos')
            .then(data => data.json())
            .then(data => {

                console.timeEnd('fetching data');
                console.log(data);
            });

day10:
checkbox應用
注意query selector syntax
const checkboxes = document.querySelectorAll('.inbox input[type="checkbox"]');
檢查undefined
condition:  true || false && false = true
            (true || false) && false = false

                    if ((checkbox === this || checkbox === lastCheckedbox) && lastCheckedbox !== undefined) {
                        inbetween = !inbetween;

                    }

day11:
html video player
querySelector 用法
const ranges = document.querySelectorAll('input[type="range"]');
const skips = document.querySelectorAll('[data-skip]');
學習video player API
        viewer.play();
        viewer.pause();
注意click progress bar 和 mousedown flag 的logic
let editProgress = false;
progress.addEventListener('mousedown', (e) => {
    editProgress = true;
    updateTime(e);
});

day12:
處理array
array.splice(start[, deleteCount[, item1[, item2[, ...]]]])
keyArray.splice(-secretCode.length - 1, keyArray.length - secretCode.length);

day13:
scroll slide in/out
利用window.scrollY 和 image.offsetY 判斷 slide in/ out
const slideInAt = (window.scrollY + window.innerHeight);
if (isHalfShown && isNotScrolledPast) {
    slideImage.classList.add('active');
}

day14:
Shallow copy, deep copy
類似pointer的概念
以下方法new object/array 會指向original object/array 的 memory address, 修改新的會同時影響原來的
const players = ['Wes', 'Sarah', 'Ryan', 'Poppy'];
const team = players;

解決方法: deep copy
const team2 = players.slice();
const team3 = [].concat(players);
const team4 = [...players];
const team5 = Array.from(players);
然而以上方法只能做一層deep copy, 如果object 裡有object/ array 方法會失效
可以將obj換成json再換回來, 只限json obj, method/function 會失效
var obj2 = JSON.parse(JSON.stringify(obj1));
或使用jquery $.extend or lodash library 

day15:
localstorage
const items = JSON.parse(localStorage.getItem('items')) || [];
localStorage.setItem('items', JSON.stringify(items));
以JSON 格式儲存,以JSON 格式讀取

day16:
Mouse Shadow
<h1 contenteditable>🔥WOAH!</h1>
contenteditable 表示可否被用戶編輯
text-shadow: 50px 50px 0 rgba(0, 0, 0, 0.7);
text-shadow: h-shadow v-shadow blur-radius color|none|initial|inherit;
不同的varible定義寫法
// const width = hero.offsetWidth;
// const height = hero.offsetHeight;
const {
    offsetWidth: width,
    offsetHeight: height
} = hero;

day17:
sort without articles
function strip(bandName) {
    return bandName.replace(/^(a |an |the )/i, '').trim();
}

day18:
Adding Up Times with Reduce
const timeNodes = Array.from(document.querySelectorAll('[data-time]'));
const [mins, secs] = timeCode.split(':').map(parseFloat);
將nodes 轉成array,
將string轉成float

